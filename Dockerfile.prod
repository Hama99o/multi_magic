ARG RUBY_VERSION=3.2.2
FROM ruby:${RUBY_VERSION}-alpine AS base

# Install system dependencies required both at runtime and build time
RUN apk add --update \
  git \
  postgresql-dev \
  tzdata \
  build-base \
  libffi-dev \
  vips-dev \
  nodejs \
  yarn \
  && rm -rf /var/cache/apk/*

# Upgrade RubyGems and install Bundler (ensure exact version and remove default)
ARG BUNDLER_VERSION=2.7.2
RUN gem update --system && \
    rm /usr/local/lib/ruby/gems/*/specifications/default/bundler-*.gemspec || true && \
    gem uninstall -aIx bundler || true && \
    gem install bundler -v ${BUNDLER_VERSION} --no-document

# Set production environment
ENV RAILS_ENV=production \
    NODE_ENV=production \
    BUNDLE_DEPLOYMENT=1 \
    BUNDLE_WITHOUT="development:test"

# We'll install the app in this directory
WORKDIR /app

# Copy dependency files
COPY Gemfile Gemfile.lock ./
COPY package.json yarn.lock ./

# Install gems
RUN bundle config set --local deployment 'true' \
    && bundle config set --local without 'development test' \
    && bundle install --no-cache --jobs "$(nproc)" --retry "$(nproc)" \
    && rm -rf /usr/local/bundle/cache/*.gem \
    && find /usr/local/bundle/gems/ -name "*.c" -delete \
    && find /usr/local/bundle/gems/ -name "*.o" -delete

# Install npm packages
RUN yarn install --frozen-lockfile --production=false && yarn cache clean

# Copy application code
COPY . ./

# Precompile assets
RUN SECRET_KEY_BASE=dummy bundle exec rails assets:precompile

# Clean up
RUN yarn install --frozen-lockfile --production=true && \
    rm -rf node_modules/.cache tmp/cache

# Create a non-root user
RUN adduser -D -s /bin/sh rails
RUN chown -R rails:rails /app
USER rails

# Expose port
EXPOSE 3000

# Run migrations then start Puma (binds via config/puma.rb to 0.0.0.0:$PORT)
CMD ["/bin/sh", "-lc", "bundle exec rails db:migrate && bundle exec puma -C config/puma.rb"]